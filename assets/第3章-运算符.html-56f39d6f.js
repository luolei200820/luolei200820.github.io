import{_ as n,p as s,q as a,a1 as e}from"./framework-6f85e614.js";const p="/assets/arithmetic-operator-6bf129d6.jpg",t="/assets/relational-operators-b06ec883.jpg",o="/assets/operator-priority-f0fd4aaf.jpg",l={},c=e('<h1 id="第3章-运算符" tabindex="-1"><a class="header-anchor" href="#第3章-运算符" aria-hidden="true">#</a> 第3章 运算符</h1><h2 id="_3-1-算数运算符" tabindex="-1"><a class="header-anchor" href="#_3-1-算数运算符" aria-hidden="true">#</a> 3.1 算数运算符</h2><p><strong>算术运算符一览</strong></p><p><img src="'+p+`" alt="算术运算符一览"></p><h3 id="_3-1-1-案例演示" tabindex="-1"><a class="header-anchor" href="#_3-1-1-案例演示" aria-hidden="true">#</a> 3.1.1 案例演示</h3><ol><li><p>+, -, *, /, %, ++, --</p><p>重点：/, %, ++</p><p><strong>除号&quot;/&quot;的使用</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 从数学来看是2.5，Java中是2</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10.0</span><span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Java是2.5</span>
<span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// Java中10/4=2，2=&gt;2.0</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 是2.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>取模&quot;%&quot;的使用</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// % 取模，取余数</span>
<span class="token comment">// % 的本质，看一个公式：a % b = a - a / b * b</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token comment">// -10 % 3 = -10 - (-10) / 3 * 3 = -1</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 10 % -3 = 10 - (10 / 3) * 3 = 1</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">%</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// -10 % -3 = -10 - (-10) / (-3) * (-3) = -1</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">%</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>自增&quot;++&quot;的使用</strong></p><ul><li>前++：++i先自增后赋值</li><li>后++：i++先赋值后自增</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
<span class="token comment">// int k = ++j; //等价于 j = j + 1; k = j;</span>
<span class="token keyword">int</span> k <span class="token operator">=</span> j<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">//等价于 k = j; j = j + 1;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;k=&quot;</span> <span class="token operator">+</span> k <span class="token operator">+</span> <span class="token string">&quot;j=&quot;</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>自增: ++</p><p>作为独立的语句使用：前++和后++都完全等价于 i=i+1;</p><p>作为表达式使用：</p><ul><li>前++：++i先自增后赋值</li><li>后++：i++先赋值后自增</li></ul></li><li><p>--, +, -, * 是一个道理，完全可以类推</p></li></ol><h3 id="_3-1-2-练习1" tabindex="-1"><a class="header-anchor" href="#_3-1-2-练习1" aria-hidden="true">#</a> 3.1.2 练习1</h3><ol><li><p>面试题1</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
i<span class="token operator">=</span>i<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>问：结果是多少？为什么？</p><blockquote><p>答：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// i-&gt;1</span>
i<span class="token operator">=</span>i<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 规则使用临时变量:(1)temp=i;(2)i=i+1;(3)i=temp;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li><li><p>面试题2</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
i<span class="token operator">=</span><span class="token operator">++</span>i<span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>答：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// i-&gt;1</span>
i<span class="token operator">=</span>i<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 规则使用临时变量:(1)i=i+1;(2)temp=i;(3)i=temp;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ol><h3 id="_3-1-3-自增自减练习题" tabindex="-1"><a class="header-anchor" href="#_3-1-3-自增自减练习题" aria-hidden="true">#</a> 3.1.3 自增自减练习题</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i2 <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> i1<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i=&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i2=&quot;</span><span class="token operator">+</span>i2<span class="token punctuation">)</span><span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token operator">--</span>i2<span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i=&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i2=&quot;</span><span class="token operator">+</span>i2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>i=20 i2=20 i=19 i2=19</p></blockquote><h3 id="_3-1-4-练习2" tabindex="-1"><a class="header-anchor" href="#_3-1-4-练习2" aria-hidden="true">#</a> 3.1.4 练习2</h3><ol><li><p>假如还有59天房价，问：合xx个星期零xx天</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 1. 需求：</span>
<span class="token comment">// 假如还有59天房价，问：合xx个星期零xx天</span>
<span class="token comment">// 2. 思路分析</span>
<span class="token comment">// (1) 使用int变量 days 保存天数</span>
<span class="token comment">// (2) 一个星期是7天 星期数：days / 7 零xx天 days % 7</span>
<span class="token comment">// (3) 输出</span>
<span class="token comment">// 3. 走代码</span>
<span class="token keyword">int</span> days <span class="token operator">=</span> <span class="token number">59</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> weeks <span class="token operator">=</span> days <span class="token operator">/</span> <span class="token number">7</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> leftDays <span class="token operator">=</span> days <span class="token operator">%</span> <span class="token number">7</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>days <span class="token operator">+</span> <span class="token string">&quot;天 合&quot;</span> <span class="token operator">+</span> weeks <span class="token operator">+</span> <span class="token string">&quot;星期零&quot;</span> <span class="token operator">+</span>leftDays <span class="token operator">+</span> <span class="token string">&quot;天&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>定义一个变量保存华氏温度，华氏温度转换摄氏温度的公式为：5/9*(华氏温度-100)，请求出华氏温度对应的摄氏温度。[234.5]</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 1. 需求：</span>
<span class="token comment">// 定义一个变量保存华氏温度，华氏温度转换摄氏温度的公式为：5/9*(华氏温度-100)，请求出华氏温度对应的摄氏温度。[234.6]</span>
<span class="token comment">// 2. 思路分析</span>
<span class="token comment">// (1) 先定义double变量保存华氏温度</span>
<span class="token comment">// (2) 根据给出的公式进行计算即可</span>
<span class="token comment">//（需要考虑数学公式和Java语言的特性）</span>
<span class="token comment">// (3) 将得到的结果保存到double 摄氏温度</span>
<span class="token comment">// 3. 走代码</span>
<span class="token keyword">double</span> huaShi <span class="token operator">=</span> <span class="token number">234.6</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> sheShi <span class="token operator">=</span> <span class="token number">5.0</span> <span class="token operator">/</span> <span class="token number">9</span> <span class="token operator">*</span> <span class="token punctuation">(</span>huaShi <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;华氏温度&quot;</span><span class="token operator">+</span>huaShi<span class="token operator">+</span><span class="token string">&quot;对应的摄氏温度=&quot;</span><span class="token operator">+</span>sheShi<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_3-2-关系运算符" tabindex="-1"><a class="header-anchor" href="#_3-2-关系运算符" aria-hidden="true">#</a> 3.2 关系运算符</h2><p><strong>关系运算符一览</strong></p><p><img src="`+t+`" alt="关系运算符一览"></p><p><strong>细节说明</strong></p><ol><li>关系运算符的结果都是<code>boolean</code>型，也就是要么true，要么false。</li><li>关系运算符组成的表达式，我们称之为<strong>关系表达式</strong>。a&gt;b</li><li>比较运算符&quot;==&quot;不能误写成&quot;=&quot;</li></ol><h2 id="_3-3-逻辑运算符" tabindex="-1"><a class="header-anchor" href="#_3-3-逻辑运算符" aria-hidden="true">#</a> 3.3 逻辑运算符</h2><ul><li><p>分两组学习</p><ol><li>短路与&amp;&amp;，短路或||，取反!</li><li>逻辑与&amp;，逻辑或|，逻辑异或^</li></ol></li><li><p>说明逻辑运算规则</p><ol><li>a&amp;b：逻辑与，同真才真</li><li>a&amp;&amp;b：短路与，同真才真</li><li>a|b：逻辑或，有真为真</li><li>a||b：短路或，有真为真</li><li>!a：取反，真的变成假的，假的变成真的</li><li>a^b：a和b不同为真</li></ol></li><li><p>&amp;&amp;和&amp;的使用区别</p><ol><li>&amp;&amp;短路与：如果第一个条件为false，则第二个条件不会判断</li><li>&amp;逻辑与：不管第一个条件是否为false，第二个条件仍然会判断</li><li>开发中，我们基本常使用的是短路&amp;&amp;，效率高</li></ol></li><li><p>||和|的使用区别</p><ol><li>||短路或：如果第一个条件为true，则第二个条件不会判断，最终结果为true，效率高</li><li>|逻辑或：不管第一个条件是否为true，第二个条件都要判断</li><li>开发中基本常用短路或||</li></ol></li></ul><h2 id="_3-4-赋值运算符细节" tabindex="-1"><a class="header-anchor" href="#_3-4-赋值运算符细节" aria-hidden="true">#</a> 3.4 赋值运算符细节</h2><p>复合赋值运算符会进行类型转换：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
b <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 等价于 b = (byte)(b+2);</span>
b<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// b = (byte)b+1;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-5-三元运算符" tabindex="-1"><a class="header-anchor" href="#_3-5-三元运算符" aria-hidden="true">#</a> 3.5 三元运算符</h2><ul><li><p>基本语法</p><p>条件表达式?表达式1:表达式2;</p><p>运算规则：</p><ol><li>如果条件表达式为true,运算后的结果是表达式1</li><li>如果条件表达式为false，运算后的结果为表达式2</li></ol></li><li><p>案例演示</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> result <span class="token operator">=</span> a<span class="token operator">&gt;</span>b<span class="token operator">?</span> a<span class="token operator">++</span><span class="token operator">:</span>b<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// 99</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用细节</p><ol><li>表达式1和表达式2要为可以赋给接收变量的类型（或可以自动转换/或者强制转换）</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">&gt;</span> b<span class="token operator">?</span> <span class="token number">1.1</span><span class="token operator">:</span><span class="token number">3.4</span><span class="token punctuation">;</span> <span class="token comment">// 错误，编译时报错</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>三元运算符可以转成if--else语句</li></ol></li></ul><h2 id="_3-6-运算符优先级" tabindex="-1"><a class="header-anchor" href="#_3-6-运算符优先级" aria-hidden="true">#</a> 3.6 运算符优先级</h2><p><img src="`+o+'" alt="运算符优先级"></p><h2 id="_3-7-标识符的命名规则和规范" tabindex="-1"><a class="header-anchor" href="#_3-7-标识符的命名规则和规范" aria-hidden="true">#</a> 3.7 标识符的命名规则和规范</h2><ul><li>标识符概念 <ol><li>Java对各种变量、方法和类等命名时使用的字符序列称为标识符</li><li>凡是自己可以起名字的地方都叫标识符 <code>int num1 = 90;</code></li></ol></li><li>标识符的命名规则（必须遵守） <ol><li>由26个英文字母大小写，0-9，_或$组成</li><li>数字不可以开头。 <code>int 3ab = 1; </code>❌</li><li>不可以使用关键字和保留字，但能包含关键字和保留字</li><li>Java中严格区分大小写，长度无限制。<code>int totalNum = 10;int n=90;</code></li><li>标识符不能包含空格。<code>int a b = 90;</code> ❌</li></ol></li><li>标识符命名规范 <ol><li>包名：多单词组成时所有字母都小写：aaa.bbb.ccc // 比如com.hsp.crm</li><li>类名、接口名：多单词组成时，所有单词的首字母大写：XxxYyyZzz <strong>[大驼峰法]</strong> 比如：TankShotGame</li><li>变量名、方法名：多单词组成时：首字母小写，第二个单词开始首字母大写 xxxYyyZzz <strong>[小驼峰，简称 驼峰法]</strong> 比如：tankShotGame</li><li>常量名：所有字母都大写。多单词时每个单词用下划线连接</li></ol></li></ul><h2 id="_3-8-关键字" tabindex="-1"><a class="header-anchor" href="#_3-8-关键字" aria-hidden="true">#</a> 3.8 关键字</h2><p>定义：被Java语言赋予了特殊含义，用作专门用途的单词</p><p>特点：所有字母都为小写</p><p>太多不一一列举...</p><h2 id="_3-9-保留字" tabindex="-1"><a class="header-anchor" href="#_3-9-保留字" aria-hidden="true">#</a> 3.9 保留字</h2><p>现有Java版本尚未使用，但以后版本可能会作为关键字使用。自己命名标识符时要避免使用这些保留字。</p>',35),i=[c];function u(r,d){return s(),a("div",null,i)}const m=n(l,[["render",u],["__file","第3章-运算符.html.vue"]]);export{m as default};
